a:6:{s:9:"classesIn";a:1:{s:48:"PHPUnit\Framework\MockObject\Generator\Generator";a:6:{s:4:"name";s:9:"Generator";s:14:"namespacedName";s:48:"PHPUnit\Framework\MockObject\Generator\Generator";s:9:"namespace";s:38:"PHPUnit\Framework\MockObject\Generator";s:9:"startLine";i:75;s:7:"endLine";i:1126;s:7:"methods";a:22:{s:10:"testDouble";a:6:{s:10:"methodName";s:10:"testDouble";s:9:"signature";s:409:"testDouble(string $type, bool $mockObject, bool $markAsMockObject, ?array $methods, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods, ?object $proxyTarget, bool $allowMockingUnknownTypes, bool $returnValueGeneration): \PHPUnit\Framework\MockObject\MockObject|\PHPUnit\Framework\MockObject\Stub";s:10:"visibility";s:6:"public";s:9:"startLine";i:113;s:7:"endLine";i:161;s:3:"ccn";i:6;}s:34:"testDoubleForInterfaceIntersection";a:6:{s:10:"methodName";s:34:"testDoubleForInterfaceIntersection";s:9:"signature";s:197:"testDoubleForInterfaceIntersection(array $interfaces, bool $mockObject, bool $callAutoload, bool $returnValueGeneration): \PHPUnit\Framework\MockObject\MockObject|\PHPUnit\Framework\MockObject\Stub";s:10:"visibility";s:6:"public";s:9:"startLine";i:169;s:7:"endLine";i:227;s:3:"ccn";i:7;}s:26:"mockObjectForAbstractClass";a:6:{s:10:"methodName";s:26:"mockObjectForAbstractClass";s:9:"signature";s:256:"mockObjectForAbstractClass(string $originalClassName, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, ?array $mockedMethods, bool $cloneArguments): PHPUnit\Framework\MockObject\MockObject";s:10:"visibility";s:6:"public";s:9:"startLine";i:249;s:7:"endLine";i:286;s:3:"ccn";i:7;}s:18:"mockObjectForTrait";a:6:{s:10:"methodName";s:18:"mockObjectForTrait";s:9:"signature";s:240:"mockObjectForTrait(string $traitName, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, ?array $mockedMethods, bool $cloneArguments): PHPUnit\Framework\MockObject\MockObject";s:10:"visibility";s:6:"public";s:9:"startLine";i:310;s:7:"endLine";i:336;s:3:"ccn";i:2;}s:14:"objectForTrait";a:6:{s:10:"methodName";s:14:"objectForTrait";s:9:"signature";s:134:"objectForTrait(string $traitName, string $traitClassName, bool $callAutoload, bool $callOriginalConstructor, array $arguments): object";s:10:"visibility";s:6:"public";s:9:"startLine";i:349;s:7:"endLine";i:380;s:3:"ccn";i:2;}s:8:"generate";a:6:{s:10:"methodName";s:8:"generate";s:9:"signature";s:248:"generate(string $type, bool $mockObject, bool $markAsMockObject, ?array $methods, string $mockClassName, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods): PHPUnit\Framework\MockObject\Generator\MockClass";s:10:"visibility";s:6:"public";s:9:"startLine";i:392;s:7:"endLine";i:433;s:3:"ccn";i:5;}s:21:"generateClassFromWsdl";a:6:{s:10:"methodName";s:21:"generateClassFromWsdl";s:9:"signature";s:98:"generateClassFromWsdl(string $wsdlFile, string $className, array $methods, array $options): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:441;s:7:"endLine";i:530;s:3:"ccn";i:10;}s:16:"mockClassMethods";a:6:{s:10:"methodName";s:16:"mockClassMethods";s:9:"signature";s:91:"mockClassMethods(string $className, bool $callOriginalMethods, bool $cloneArguments): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:537;s:7:"endLine";i:549;s:3:"ccn";i:5;}s:27:"userDefinedInterfaceMethods";a:6:{s:10:"methodName";s:27:"userDefinedInterfaceMethods";s:9:"signature";s:57:"userDefinedInterfaceMethods(string $interfaceName): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:558;s:7:"endLine";i:572;s:3:"ccn";i:3;}s:9:"getObject";a:6:{s:10:"methodName";s:9:"getObject";s:9:"signature";s:218:"getObject(PHPUnit\Framework\MockObject\Generator\MockType $mockClass, string $type, bool $callOriginalConstructor, array $arguments, bool $callOriginalMethods, ?object $proxyTarget, bool $returnValueGeneration): object";s:10:"visibility";s:7:"private";s:9:"startLine";i:578;s:7:"endLine";i:627;s:3:"ccn";i:8;}s:30:"generateCodeForTestDoubleClass";a:6:{s:10:"methodName";s:30:"generateCodeForTestDoubleClass";s:9:"signature";s:278:"generateCodeForTestDoubleClass(string $type, bool $mockObject, bool $markAsMockObject, ?array $explicitMethods, string $mockClassName, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods): PHPUnit\Framework\MockObject\Generator\MockClass";s:10:"visibility";s:7:"private";s:9:"startLine";i:635;s:7:"endLine";i:880;s:3:"ccn";i:54;}s:17:"generateClassName";a:6:{s:10:"methodName";s:17:"generateClassName";s:9:"signature";s:73:"generateClassName(string $type, string $className, string $prefix): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:882;s:7:"endLine";i:912;s:3:"ccn";i:4;}s:34:"generateTestDoubleClassDeclaration";a:6:{s:10:"methodName";s:34:"generateTestDoubleClassDeclaration";s:9:"signature";s:148:"generateTestDoubleClassDeclaration(bool $mockObject, array $mockClassName, bool $isInterface, array $additionalInterfaces, bool $isReadonly): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:914;s:7:"endLine";i:957;s:3:"ccn";i:7;}s:18:"canMethodBeDoubled";a:6:{s:10:"methodName";s:18:"canMethodBeDoubled";s:9:"signature";s:50:"canMethodBeDoubled(ReflectionMethod $method): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:959;s:7:"endLine";i:978;s:3:"ccn";i:5;}s:20:"isMethodNameExcluded";a:6:{s:10:"methodName";s:20:"isMethodNameExcluded";s:9:"signature";s:40:"isMethodNameExcluded(string $name): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:980;s:7:"endLine";i:983;s:3:"ccn";i:1;}s:15:"ensureKnownType";a:6:{s:10:"methodName";s:15:"ensureKnownType";s:9:"signature";s:55:"ensureKnownType(string $type, bool $callAutoload): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:988;s:7:"endLine";i:993;s:3:"ccn";i:3;}s:18:"ensureValidMethods";a:6:{s:10:"methodName";s:18:"ensureValidMethods";s:9:"signature";s:41:"ensureValidMethods(?array $methods): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:999;s:7:"endLine";i:1014;s:3:"ccn";i:5;}s:39:"ensureNameForTestDoubleClassIsAvailable";a:6:{s:10:"methodName";s:39:"ensureNameForTestDoubleClassIsAvailable";s:9:"signature";s:64:"ensureNameForTestDoubleClassIsAvailable(string $className): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:1020;s:7:"endLine";i:1031;s:3:"ccn";i:5;}s:22:"instantiateProxyTarget";a:6:{s:10:"methodName";s:22:"instantiateProxyTarget";s:9:"signature";s:98:"instantiateProxyTarget(?object $proxyTarget, object $object, string $type, array $arguments): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:1038;s:7:"endLine";i:1063;s:3:"ccn";i:4;}s:12:"reflectClass";a:6:{s:10:"methodName";s:12:"reflectClass";s:9:"signature";s:48:"reflectClass(string $className): ReflectionClass";s:10:"visibility";s:7:"private";s:9:"startLine";i:1070;s:7:"endLine";i:1085;s:3:"ccn";i:2;}s:16:"namesOfMethodsIn";a:6:{s:10:"methodName";s:16:"namesOfMethodsIn";s:9:"signature";s:53:"namesOfMethodsIn(string $classOrInterfaceName): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:1094;s:7:"endLine";i:1106;s:3:"ccn";i:4;}s:16:"interfaceMethods";a:6:{s:10:"methodName";s:16:"interfaceMethods";s:9:"signature";s:68:"interfaceMethods(string $interfaceName, bool $cloneArguments): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:1115;s:7:"endLine";i:1125;s:3:"ccn";i:2;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:1127;s:18:"commentLinesOfCode";i:182;s:21:"nonCommentLinesOfCode";i:945;}s:15:"ignoredLinesFor";a:41:{i:0;i:75;i:1;i:584;i:2;i:585;i:3;i:586;i:4;i:587;i:5;i:588;i:6;i:589;i:7;i:590;i:8;i:591;i:9;i:615;i:10;i:616;i:11;i:617;i:12;i:618;i:13;i:619;i:14;i:620;i:15;i:621;i:16;i:622;i:17;i:796;i:18;i:797;i:19;i:798;i:20;i:836;i:21;i:837;i:22;i:838;i:23;i:1050;i:24;i:1051;i:25;i:1052;i:26;i:1053;i:27;i:1054;i:28;i:1055;i:29;i:1056;i:30;i:1057;i:31;i:1058;i:32;i:1074;i:33;i:1075;i:34;i:1076;i:35;i:1077;i:36;i:1078;i:37;i:1079;i:38;i:1080;i:39;i:1081;i:40;i:1082;}s:17:"executableLinesIn";a:527:{i:115;i:5;i:116;i:6;i:119;i:7;i:120;i:8;i:123;i:9;i:124;i:10;i:126;i:11;i:127;i:12;i:130;i:13;i:131;i:13;i:132;i:13;i:133;i:13;i:134;i:13;i:135;i:13;i:136;i:13;i:137;i:13;i:138;i:13;i:139;i:13;i:140;i:13;i:142;i:14;i:143;i:14;i:144;i:14;i:145;i:14;i:146;i:14;i:147;i:14;i:148;i:14;i:149;i:14;i:150;i:14;i:152;i:15;i:154;i:16;i:155;i:17;i:157;i:18;i:160;i:19;i:171;i:20;i:172;i:21;i:175;i:22;i:176;i:23;i:177;i:24;i:181;i:25;i:183;i:26;i:185;i:27;i:186;i:28;i:189;i:29;i:190;i:30;i:193;i:31;i:195;i:32;i:196;i:33;i:197;i:34;i:200;i:35;i:208;i:36;i:203;i:37;i:204;i:37;i:205;i:37;i:206;i:37;i:207;i:37;i:210;i:38;i:212;i:39;i:213;i:39;i:214;i:39;i:215;i:39;i:216;i:39;i:217;i:39;i:219;i:40;i:221;i:41;i:222;i:41;i:223;i:41;i:224;i:41;i:225;i:41;i:226;i:41;i:251;i:43;i:252;i:44;i:253;i:45;i:254;i:46;i:256;i:47;i:257;i:48;i:258;i:49;i:262;i:50;i:263;i:51;i:266;i:52;i:267;i:52;i:268;i:52;i:269;i:52;i:270;i:52;i:271;i:52;i:272;i:52;i:273;i:52;i:274;i:52;i:275;i:52;i:276;i:52;i:277;i:52;i:279;i:53;i:280;i:54;i:282;i:55;i:285;i:56;i:312;i:58;i:313;i:59;i:316;i:60;i:317;i:60;i:318;i:60;i:319;i:60;i:320;i:60;i:322;i:61;i:324;i:62;i:325;i:62;i:326;i:62;i:327;i:62;i:328;i:62;i:329;i:62;i:330;i:62;i:332;i:63;i:333;i:64;i:335;i:65;i:351;i:67;i:352;i:68;i:355;i:69;i:356;i:69;i:357;i:69;i:358;i:69;i:359;i:69;i:361;i:70;i:363;i:71;i:364;i:71;i:365;i:71;i:366;i:71;i:367;i:71;i:368;i:71;i:369;i:71;i:371;i:72;i:372;i:72;i:373;i:72;i:374;i:72;i:375;i:72;i:376;i:72;i:377;i:72;i:378;i:72;i:379;i:72;i:394;i:73;i:395;i:74;i:396;i:74;i:397;i:74;i:398;i:74;i:399;i:74;i:400;i:74;i:401;i:74;i:402;i:74;i:403;i:74;i:404;i:74;i:405;i:74;i:408;i:75;i:409;i:75;i:410;i:75;i:411;i:75;i:412;i:75;i:413;i:75;i:414;i:75;i:415;i:75;i:416;i:75;i:418;i:76;i:419;i:77;i:420;i:77;i:421;i:77;i:422;i:77;i:423;i:77;i:424;i:77;i:425;i:77;i:426;i:77;i:427;i:77;i:428;i:77;i:429;i:77;i:432;i:78;i:443;i:80;i:444;i:81;i:447;i:82;i:450;i:83;i:451;i:84;i:453;i:85;i:454;i:86;i:459;i:88;i:455;i:88;i:456;i:88;i:457;i:88;i:458;i:88;i:462;i:89;i:464;i:90;i:465;i:91;i:467;i:92;i:468;i:93;i:470;i:94;i:471;i:95;i:472;i:96;i:473;i:97;i:475;i:98;i:476;i:99;i:477;i:99;i:478;i:99;i:479;i:99;i:481;i:100;i:482;i:101;i:484;i:102;i:485;i:103;i:488;i:104;i:491;i:105;i:492;i:105;i:493;i:105;i:494;i:105;i:495;i:105;i:496;i:105;i:498;i:106;i:502;i:107;i:504;i:108;i:505;i:109;i:508;i:110;i:510;i:111;i:511;i:112;i:513;i:113;i:514;i:114;i:515;i:115;i:516;i:116;i:519;i:117;i:520;i:117;i:521;i:117;i:522;i:117;i:523;i:117;i:524;i:117;i:525;i:117;i:526;i:117;i:527;i:117;i:529;i:118;i:539;i:119;i:540;i:120;i:542;i:121;i:543;i:122;i:544;i:123;i:548;i:124;i:560;i:125;i:561;i:126;i:563;i:127;i:564;i:128;i:565;i:129;i:568;i:130;i:571;i:131;i:580;i:133;i:583;i:134;i:585;i:135;i:590;i:137;i:586;i:137;i:587;i:137;i:588;i:137;i:589;i:137;i:594;i:138;i:596;i:139;i:602;i:140;i:603;i:140;i:604;i:140;i:605;i:140;i:607;i:141;i:608;i:142;i:612;i:143;i:614;i:144;i:616;i:145;i:621;i:147;i:617;i:147;i:618;i:147;i:619;i:147;i:620;i:147;i:626;i:148;i:637;i:149;i:638;i:150;i:639;i:151;i:640;i:152;i:641;i:153;i:642;i:154;i:643;i:155;i:644;i:156;i:645;i:157;i:646;i:158;i:648;i:159;i:649;i:159;i:650;i:159;i:651;i:159;i:652;i:159;i:654;i:160;i:655;i:161;i:656;i:162;i:657;i:163;i:660;i:164;i:661;i:165;i:663;i:166;i:664;i:167;i:665;i:167;i:666;i:167;i:668;i:168;i:671;i:169;i:673;i:170;i:675;i:171;i:676;i:172;i:679;i:173;i:680;i:174;i:683;i:175;i:684;i:176;i:688;i:177;i:689;i:178;i:690;i:179;i:691;i:180;i:692;i:181;i:694;i:182;i:695;i:183;i:697;i:184;i:698;i:185;i:700;i:186;i:701;i:187;i:705;i:188;i:706;i:188;i:707;i:188;i:710;i:189;i:711;i:189;i:712;i:189;i:713;i:189;i:714;i:189;i:718;i:190;i:719;i:191;i:720;i:192;i:721;i:193;i:723;i:194;i:724;i:194;i:725;i:194;i:728;i:195;i:729;i:196;i:731;i:197;i:732;i:198;i:733;i:199;i:735;i:200;i:739;i:201;i:743;i:202;i:744;i:203;i:745;i:203;i:746;i:203;i:749;i:204;i:750;i:205;i:751;i:205;i:752;i:205;i:755;i:206;i:756;i:207;i:757;i:208;i:758;i:209;i:760;i:210;i:761;i:211;i:762;i:211;i:763;i:211;i:766;i:212;i:767;i:212;i:768;i:212;i:769;i:212;i:770;i:212;i:771;i:212;i:772;i:212;i:777;i:213;i:778;i:214;i:780;i:215;i:781;i:216;i:783;i:217;i:784;i:217;i:785;i:217;i:786;i:217;i:787;i:217;i:788;i:217;i:792;i:218;i:793;i:219;i:795;i:220;i:797;i:221;i:800;i:222;i:803;i:223;i:804;i:224;i:807;i:225;i:808;i:226;i:810;i:227;i:813;i:228;i:814;i:229;i:815;i:229;i:816;i:229;i:817;i:229;i:818;i:229;i:819;i:229;i:822;i:230;i:823;i:230;i:824;i:230;i:825;i:230;i:826;i:231;i:827;i:232;i:831;i:233;i:832;i:234;i:835;i:235;i:837;i:236;i:840;i:237;i:841;i:238;i:842;i:239;i:843;i:240;i:847;i:241;i:849;i:242;i:850;i:243;i:851;i:243;i:852;i:243;i:853;i:243;i:856;i:244;i:858;i:245;i:859;i:245;i:860;i:245;i:861;i:245;i:862;i:245;i:863;i:245;i:864;i:245;i:865;i:245;i:866;i:245;i:867;i:245;i:868;i:245;i:869;i:245;i:870;i:245;i:871;i:245;i:872;i:245;i:873;i:245;i:875;i:246;i:876;i:246;i:877;i:246;i:878;i:246;i:879;i:246;i:884;i:247;i:885;i:248;i:888;i:249;i:890;i:250;i:891;i:251;i:892;i:252;i:893;i:253;i:895;i:254;i:896;i:255;i:899;i:256;i:903;i:257;i:901;i:258;i:902;i:258;i:906;i:259;i:907;i:259;i:908;i:259;i:909;i:259;i:910;i:259;i:911;i:259;i:916;i:260;i:917;i:261;i:919;i:262;i:922;i:263;i:923;i:264;i:925;i:265;i:928;i:266;i:930;i:267;i:931;i:268;i:932;i:268;i:933;i:268;i:934;i:268;i:935;i:268;i:937;i:269;i:938;i:270;i:940;i:271;i:941;i:272;i:944;i:273;i:947;i:274;i:948;i:274;i:949;i:274;i:950;i:274;i:951;i:274;i:952;i:274;i:953;i:274;i:956;i:275;i:961;i:276;i:962;i:277;i:965;i:278;i:966;i:279;i:969;i:280;i:970;i:281;i:973;i:282;i:974;i:283;i:977;i:284;i:982;i:285;i:990;i:286;i:991;i:287;i:1001;i:288;i:1002;i:289;i:1005;i:290;i:1006;i:291;i:1007;i:292;i:1011;i:293;i:1012;i:294;i:1022;i:295;i:1023;i:296;i:1026;i:297;i:1027;i:298;i:1028;i:299;i:1029;i:300;i:1040;i:301;i:1041;i:302;i:1043;i:303;i:1044;i:304;i:1046;i:305;i:1049;i:306;i:1051;i:307;i:1056;i:309;i:1052;i:309;i:1053;i:309;i:1054;i:309;i:1055;i:309;i:1062;i:310;i:1073;i:311;i:1075;i:312;i:1080;i:314;i:1076;i:314;i:1077;i:314;i:1078;i:314;i:1079;i:314;i:1084;i:315;i:1096;i:316;i:1097;i:317;i:1099;i:318;i:1100;i:319;i:1101;i:320;i:1105;i:321;i:1117;i:322;i:1118;i:323;i:1120;i:324;i:1121;i:325;i:1124;i:326;}}