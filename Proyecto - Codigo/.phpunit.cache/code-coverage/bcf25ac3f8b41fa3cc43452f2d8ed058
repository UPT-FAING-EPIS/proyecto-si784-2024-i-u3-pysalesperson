a:6:{s:9:"classesIn";a:1:{s:32:"SebastianBergmann\Type\UnionType";a:6:{s:4:"name";s:9:"UnionType";s:14:"namespacedName";s:32:"SebastianBergmann\Type\UnionType";s:9:"namespace";s:22:"SebastianBergmann\Type";s:9:"startLine";i:17;s:7:"endLine";i:149;s:7:"methods";a:10:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:47:"__construct(SebastianBergmann\Type\Type $types)";s:10:"visibility";s:6:"public";s:9:"startLine";i:27;s:7:"endLine";i:33;s:3:"ccn";i:1;}s:12:"isAssignable";a:6:{s:10:"methodName";s:12:"isAssignable";s:9:"signature";s:54:"isAssignable(SebastianBergmann\Type\Type $other): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:35;s:7:"endLine";i:44;s:3:"ccn";i:3;}s:8:"asString";a:6:{s:10:"methodName";s:8:"asString";s:9:"signature";s:18:"asString(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:49;s:7:"endLine";i:52;s:3:"ccn";i:1;}s:4:"name";a:6:{s:10:"methodName";s:4:"name";s:9:"signature";s:14:"name(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:57;s:7:"endLine";i:78;s:3:"ccn";i:3;}s:10:"allowsNull";a:6:{s:10:"methodName";s:10:"allowsNull";s:9:"signature";s:18:"allowsNull(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:80;s:7:"endLine";i:89;s:3:"ccn";i:3;}s:7:"isUnion";a:6:{s:10:"methodName";s:7:"isUnion";s:9:"signature";s:15:"isUnion(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:94;s:7:"endLine";i:97;s:3:"ccn";i:1;}s:25:"containsIntersectionTypes";a:6:{s:10:"methodName";s:25:"containsIntersectionTypes";s:9:"signature";s:33:"containsIntersectionTypes(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:99;s:7:"endLine";i:108;s:3:"ccn";i:3;}s:5:"types";a:6:{s:10:"methodName";s:5:"types";s:9:"signature";s:14:"types(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:113;s:7:"endLine";i:116;s:3:"ccn";i:1;}s:23:"ensureMinimumOfTwoTypes";a:6:{s:10:"methodName";s:23:"ensureMinimumOfTwoTypes";s:9:"signature";s:65:"ensureMinimumOfTwoTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:121;s:7:"endLine";i:128;s:3:"ccn";i:2;}s:20:"ensureOnlyValidTypes";a:6:{s:10:"methodName";s:20:"ensureOnlyValidTypes";s:9:"signature";s:62:"ensureOnlyValidTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:133;s:7:"endLine";i:148;s:3:"ccn";i:4;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:150;s:18:"commentLinesOfCode";i:32;s:21:"nonCommentLinesOfCode";i:118;}s:15:"ignoredLinesFor";a:1:{i:0;i:17;}s:17:"executableLinesIn";a:41:{i:29;i:2;i:30;i:3;i:32;i:4;i:37;i:5;i:38;i:6;i:39;i:7;i:43;i:8;i:51;i:9;i:59;i:10;i:61;i:11;i:62;i:12;i:63;i:13;i:65;i:14;i:68;i:15;i:71;i:16;i:73;i:17;i:75;i:18;i:77;i:19;i:82;i:20;i:83;i:21;i:84;i:22;i:88;i:23;i:96;i:24;i:101;i:25;i:102;i:26;i:103;i:27;i:107;i:28;i:115;i:29;i:123;i:30;i:126;i:32;i:124;i:32;i:125;i:32;i:135;i:33;i:136;i:34;i:139;i:36;i:137;i:36;i:138;i:36;i:142;i:37;i:145;i:39;i:143;i:39;i:144;i:39;}}